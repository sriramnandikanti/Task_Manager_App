// Generated by Dagger (https://dagger.dev).
package com.example.taskmanagerapp.di;

import com.example.taskmanagerapp.data.TaskDao;
import com.example.taskmanagerapp.data.TaskDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideTaskDaoFactory implements Factory<TaskDao> {
  private final Provider<TaskDatabase> databaseProvider;

  public AppModule_ProvideTaskDaoFactory(Provider<TaskDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public TaskDao get() {
    return provideTaskDao(databaseProvider.get());
  }

  public static AppModule_ProvideTaskDaoFactory create(Provider<TaskDatabase> databaseProvider) {
    return new AppModule_ProvideTaskDaoFactory(databaseProvider);
  }

  public static TaskDao provideTaskDao(TaskDatabase database) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideTaskDao(database));
  }
}
